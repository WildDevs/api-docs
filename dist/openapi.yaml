openapi: 3.0.0
info:
  version: 1.0.0
  title: Wild Devs API
  description: |
    High Performance & High Security API by [Wild-Devs](https://wild-devs.net). 

    This API is open for everyone without providing any api-key, but includes member and subscriber endpoints. For those you need an api-key to query the desired endpoints, they are also marked with a lock in this API documentation.

    You can [sign up](https://wild-devs.net/register) and generate own api key for free, which also increases your rate-limit.

    To communicate with our api, you must combine your "key" with your "secret" separated by a colon and encode it with base64.
    Provide the base64 string as `x-api-key` with the request header.

    ---
    <h3>Rate-Limits</h3>
    | Scope                   | Limit                 |
    |-------------------------|-----------------------|
    | Public                  | 100 requests / 24h    |
    | Member                  | 300 requests / 24h    |
    | Subscriber: Silver      | 2.500 requests / 24h  |
    | Subscriber: Gold        | 6.000 requests / 24h  |
    | Subscriber: Platinum    | 18.000 requests / 24h |
    ---
    Every endpoint will report the current state of your rate. Following information can be found in the response header:
      - x-ratelimit-retry-after
      - x-ratelimit-limit
      - x-ratelimit-remaining
      - x-ratelimit-reset
    ---
    All responses are in `JSON` format, **subscribers** also can get them in `XML` format. Just add `xml` as query parameter to the request url.
    E.g. `https://api.wild-devs.net/v1/geoip/37.120.190.250?xml`
    ---
  contact:
    name: API Support
    url: 'https://help.wild-devs.net/'
    email: support@wild-devs.net
servers:
  - url: 'https://api.wild-devs.net/v1'
    description: API Production Server
paths:
  /string:
    post:
      summary: Random String Generator
      operationId: string
      description: |
        Generate random strings for passwords, product keys, vouchers or uuids as identifiers.

        Allowed methods: string, bytes, base32, base62, uuidv4, uuidv5

        Options for method **string**:

        | Key              | Description                                                       |
        | ---------------- | ------------------------------------------------------------------|
        | min              | The minimum length of the string (ignored if length is given)     |
        | max              | The maximum length of the API key (ignored if length is given)    |
        | length           | The length of the string                                          |
        | pool             | The characters used for the string generation                     |
        | batch            | The number of strings to generate                                 |
        | prefix           | A prefix for the string, a period (.) will be added automatically |

        Options for method **bytes**:

        | Key              | Description                                                       |
        | ---------------- | ------------------------------------------------------------------|
        | min              | The minimum length of the string (ignored if length is given)     |
        | max              | The maximum length of the API key (ignored if length is given)    |
        | length           | The length of the string                                          |
        | batch            | The number of strings to generate                                 |
        | prefix           | A prefix for the string, a period (.) will be added automatically |

        Options for method **base32**:

        | Key              | Description                                                       |
        | ---------------- | ------------------------------------------------------------------|
        | dashes           | Adds dashes (-) to the string                                     |
        | batch            | The number of strings to generate                                 |
        | prefix           | A prefix for the string, a period (.) will be added automatically |

        Options for method **base62**:

        | Key              | Description                                                       |
        | ---------------- | ------------------------------------------------------------------|
        | batch            | The number of strings to generate                                 |
        | prefix           | A prefix for the string, a period (.) will be added automatically |

        Options for method **uuidv4**:

        | Key              | Description                                                       |
        | ---------------- | ------------------------------------------------------------------|
        | dashes           | Adds dashes (-) to the string                                     |
        | batch            | The number of strings to generate                                 |
        | prefix           | A prefix for the string, a period (.) will be added automatically |

        Options for method **uuidv5**:

        | Key              | Description                                                       |
        | ---------------- | ------------------------------------------------------------------|
        | name             | A unique name to use for the generation                           |
        | namespace        | The UUID to use for the generation (ignored if batch is given)    |
        | dashes           | Adds dashes (-) to the string                                     |
        | batch            | The number of strings to generate                                 |
        | prefix           | A prefix for the string, a period (.) will be added automatically |
      tags:
        - Random
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                method:
                  type: string
                  description: 'Allowed methods are `string`, `bytes`, `base32`, `base62`, `uuidv4`, `uuidv5`'
                  example: bytes
                length:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 128
                  description: The length must be between `1` and `128`
                  example: 8
                min:
                  type: integer
                  format: int32
                  minimum: 1
                  description: Must be greater than `0` AND less than or equal to `max`
                  example: 1
                max:
                  type: integer
                  format: int32
                  maximum: 128
                  description: Must be greater than or equal to `1` or `min` AND less than or equal to `128`
                  example: 42
                pool:
                  type: string
                  description: The characters used for the string generation
                  example: ABCDEF123456789
                prefix:
                  type: string
                  description: 'A prefix for the string, a period (.) will be added automatically'
                  example: wd
                batch:
                  type: integer
                  format: int32
                  description: Must be greater than or equal to `1` AND less than or equal to `100`
                  example: 5
                dashes:
                  type: boolean
                  description: Adds dashes (-) to the string
                  example: true
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: string
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /number:
    post:
      summary: Random Number Generator
      operationId: number
      description: Generate random numbers.
      tags:
        - Random
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                min:
                  type: integer
                  format: int32
                  minimum: 1
                  description: Must be greater than `0` AND less than or equal to `max`
                  example: 1
                max:
                  type: integer
                  format: int32
                  maximum: null
                  description: Must be greater than or equal to `1` or `min` AND less than or equal to `9.007.199.254.740.991`
                  example: 42
                batch:
                  type: integer
                  format: int32
                  description: Must be greater than or equal to `1` AND less than or equal to `100`
                  example: 5
              required:
                - min
                - max
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: integer
                          format: int32
                          example: 42
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /encode:
    post:
      summary: 'Encode text to base64, utf8, utf16le, hex, ascii and latin1'
      operationId: encode
      description: |
        Encodes given text into various formats

        Allowed **from** values are: base64, utf8, utf16le, hex, ascii and latin1
      tags:
        - Utils
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Any string to encode into various formats
                  example: My string to encode
                from:
                  type: string
                  description: 'Define what type your string is -> "base64", "utf8", "utf16le", "latin1", "hex" or "ascii"'
                  example: ascii
              required:
                - text
                - from
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          base64:
                            type: string
                            format: base64
                          utf8:
                            type: string
                            format: utf8
                          utf16le:
                            type: string
                            format: utf16le
                          latin1:
                            type: string
                            format: latin1
                          hex:
                            type: string
                            format: hex
                          ascii:
                            type: string
                            format: ascii
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /decode:
    post:
      summary: 'Decode text to base64, utf8, utf16le, hex, ascii and latin1'
      operationId: decode
      description: |
        Decodes given text into various formats

        Allowed **from** values are: base64, utf8, utf16le, hex, ascii and latin1
      tags:
        - Utils
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Any string to decode into various formats
                  example: My string to decode
                from:
                  type: string
                  description: 'Define what type your string is -> "base64", "utf8", "utf16le", "latin1", "hex" or "ascii"'
                  example: base64
              required:
                - text
                - from
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          base64:
                            type: string
                            format: base64
                          utf8:
                            type: string
                            format: utf8
                          utf16le:
                            type: string
                            format: utf16le
                          latin1:
                            type: string
                            format: latin1
                          hex:
                            type: string
                            format: hex
                          ascii:
                            type: string
                            format: ascii
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /hash:
    post:
      summary: Hashes a text into various formats
      operationId: hash
      description: |
        Hashes given text into various formats
      tags:
        - Utils
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: Any string to hash into various formats
                  example: My string to hash
              required:
                - text
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          RSA-MD5:
                            type: string
                          RSA-RIPEMD160:
                            type: string
                          RSA-SHA1:
                            type: string
                          RSA-SHA1-2:
                            type: string
                          RSA-SHA224:
                            type: string
                          RSA-SHA256:
                            type: string
                          RSA-SHA3-224:
                            type: string
                          RSA-SHA3-256:
                            type: string
                          RSA-SHA3-384:
                            type: string
                          RSA-SHA3-512:
                            type: string
                          RSA-SHA384:
                            type: string
                          RSA-SHA512:
                            type: string
                          RSA-SHA512/224:
                            type: string
                          RSA-SHA512/256:
                            type: string
                          RSA-SM3:
                            type: string
                          blake2b512:
                            type: string
                          blake2s256:
                            type: string
                          id-rsassa-pkcs1-v1_5-with-sha3-224:
                            type: string
                          id-rsassa-pkcs1-v1_5-with-sha3-256:
                            type: string
                          id-rsassa-pkcs1-v1_5-with-sha3-384:
                            type: string
                          id-rsassa-pkcs1-v1_5-with-sha3-512:
                            type: string
                          md5:
                            type: string
                          md5-sha1:
                            type: string
                          md5WithRSAEncryption:
                            type: string
                          ripemd:
                            type: string
                          ripemd160:
                            type: string
                          ripemd160WithRSA:
                            type: string
                          rmd160:
                            type: string
                          sha1:
                            type: string
                          sha1WithRSAEncryption:
                            type: string
                          sha224:
                            type: string
                          sha224WithRSAEncryption:
                            type: string
                          sha256:
                            type: string
                          sha256WithRSAEncryption:
                            type: string
                          sha3-224:
                            type: string
                          sha3-256:
                            type: string
                          sha3-384:
                            type: string
                          sha3-512:
                            type: string
                          sha384:
                            type: string
                          sha384WithRSAEncryption:
                            type: string
                          sha512:
                            type: string
                          sha512-224:
                            type: string
                          sha512-224WithRSAEncryption:
                            type: string
                          sha512-256:
                            type: string
                          sha512-256WithRSAEncryption:
                            type: string
                          sha512WithRSAEncryption:
                            type: string
                          shake128:
                            type: string
                          shake256:
                            type: string
                          sm3:
                            type: string
                          sm3WithRSAEncryption:
                            type: string
                          ssl3-md5:
                            type: string
                          ssl3-sha1:
                            type: string
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  '/geoip/{ip}':
    get:
      summary: Get geolocation information about an IPv4 or IPv6 address.
      operationId: geoip
      description: |
        `Member` & `Subscriber` Endpoint. API-Key is needed.
      tags:
        - Utils
      security:
        - ApiKey: []
      parameters:
        - in: path
          name: ip
          schema:
            type: string
            format: ip
          description: IPv4 or IPv6 address
          required: true
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          city:
                            type: object
                            properties:
                              geoname_id:
                                type: integer
                                format: int32
                              names:
                                type: object
                                properties:
                                  de:
                                    type: string
                                  en:
                                    type: string
                                  es:
                                    type: string
                                  fr:
                                    type: string
                                  ja:
                                    type: string
                                  pt_BR:
                                    type: string
                                  ru:
                                    type: string
                                  zh-CN:
                                    type: string
                          continent:
                            type: object
                            properties:
                              code:
                                type: string
                              geoname_id:
                                type: integer
                                format: int32
                              names:
                                type: object
                                properties:
                                  de:
                                    type: string
                                  en:
                                    type: string
                                  es:
                                    type: string
                                  fr:
                                    type: string
                                  ja:
                                    type: string
                                  pt_BR:
                                    type: string
                                  ru:
                                    type: string
                                  zh-CN:
                                    type: string
                          country:
                            type: object
                            properties:
                              geoname_id:
                                type: integer
                                format: int32
                              is_in_european_union:
                                type: boolean
                              iso_code:
                                type: string
                              names:
                                type: object
                                properties:
                                  de:
                                    type: string
                                  en:
                                    type: string
                                  es:
                                    type: string
                                  fr:
                                    type: string
                                  ja:
                                    type: string
                                  pt_BR:
                                    type: string
                                  ru:
                                    type: string
                                  zh-CN:
                                    type: string
                          location:
                            type: object
                            properties:
                              accuracy_radius:
                                type: integer
                                format: int32
                              latitude:
                                type: integer
                                format: int32
                              longitude:
                                type: integer
                                format: int32
                              time_zone:
                                type: string
                          registered_country:
                            type: object
                            properties:
                              geoname_id:
                                type: integer
                                format: int32
                              is_in_european_union:
                                type: boolean
                              iso_code:
                                type: string
                              names:
                                type: object
                                properties:
                                  de:
                                    type: string
                                  en:
                                    type: string
                                  es:
                                    type: string
                                  fr:
                                    type: string
                                  ja:
                                    type: string
                                  pt_BR:
                                    type: string
                                  ru:
                                    type: string
                                  zh-CN:
                                    type: string
                          subdivisions:
                            type: object
                            properties:
                              geoname_id:
                                type: integer
                                format: int32
                              iso_code:
                                type: string
                              names:
                                type: object
                                properties:
                                  de:
                                    type: string
                                  en:
                                    type: string
                                  es:
                                    type: string
                                  fr:
                                    type: string
                                  ja:
                                    type: string
                                  pt_BR:
                                    type: string
                                  ru:
                                    type: string
                                  zh-CN:
                                    type: string
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /qrcode:
    post:
      summary: Create QR Code (Quick Response Code)
      operationId: qrcode
      description: "`Member` & `Subscriber` Endpoint. API-Key is needed.\n\n| Option\t\t\t\t\t            | Defaults\t\t| Description\t\t\t\t\t\t\t\t\t\t\t\t                            |\n| --------------------------- | ----------- | ------------------------------------------------------------- |\n| text\t\t\t\t\t\t            | ''\t\t\t    | Text\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                            |\n| width\t\t\t\t\t\t            | 256\t\t\t    | Width\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                            |\n| height\t\t\t\t\t\t          | 256\t\t\t    | Height\t\t\t\t\t\t\t\t\t\t\t\t\t\t                            |\n| colorDark\t\t\t\t\t          | #000000\t\t  | Dark hex color\t\t\t\t\t\t\t\t\t\t\t\t                        |\n| colorLight\t\t\t\t\t        | #ffffff\t\t  | Light hex color\t\t\t\t\t\t\t\t\t\t\t\t                        |\n| logo\t\t\t\t\t\t            | undefined\t\t| URL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              |\n| logoWidth\t\t\t\t\t          | width/3.5\t\t| Fixed logo width\t\t\t\t\t\t\t\t\t\t\t\t                      |\n| logoHeight\t\t\t\t\t        | height/3.5\t| Fixed logo height\t\t\t\t\t\t\t\t\t\t\t\t                      |\n| logoBackgroundTransparent\t  | false\t\t\t  | Transparency. When true, logoBackgroundColor is invalid\t\t    |\n| logoBackgroundColor\t\t\t    | #ffffff\t\t  | Set background hex color when image background transparent    |\n| backgroundImage\t\t\t\t      | undefined\t\t| URL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                              |\n| backgroundImageAlpha\t\t    | 1.0\t\t\t    | Background image transparency. Ranges: 0 - 1.0\t\t\t\t        |\n"
      tags:
        - Utils
      security:
        - ApiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text which should be coded into the qrcode
                  example: Wild Devs Community
                width:
                  type: integer
                  format: int32
                  description: Width in pixels
                height:
                  type: integer
                  format: int32
                  description: Height in pixels
                colorDark:
                  type: string
                  format: hex
                  description: 'Color in hex-code format, E.g. `#EE5519`'
                colorLight:
                  type: string
                  format: hex
                  description: 'Color in hex-code format, E.g. `#EE5519`'
                logo:
                  type: string
                  format: url
                  description: Provide the URL to the image which should be embedded into the qrcode
                logoWidth:
                  type: integer
                  format: int32
                  description: Width in pixels
                logoHeight:
                  type: integer
                  format: int32
                  description: Height in pixels
                logoBackgroundColor:
                  type: string
                  format: hex
                  description: 'Color in hex-code format, E.g. `#EE5519`'
                logoBackgroundTransparent:
                  type: boolean
                backgroundImage:
                  type: string
                  format: url
                  description: Provide the URL to the background image which should be embedded into the qrcode
                backgroundImageAlpha:
                  type: number
                  minimum: 0
                  maximum: 1
                  format: float
                  description: Must be greater than or equal to `0` AND less than or equal to `1`
              required:
                - text
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: string
                        format: base64
                        description: QRCode will be provided as base64.
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /compile:
    post:
      summary: Compile code and get the output
      operationId: compile
      description: |
        `Subscriber` Only Endpoint. API-Key is needed.

        Supported languages are: "c", "cpp", "js", "python"

        For each language are some options available:

        **c**
        | Key              | Description                                                   |
        | ---------------- | --------------------------------------------------------------|
        | std              | Sets the standard library for the compilation                 |
        Available **std** values are: "c99", "c11","c17", "c18"                          

        ---

        **cpp**
        | Key              | Description                                                   |
        | ---------------- | --------------------------------------------------------------|
        | std              | Sets the standard library for the compilation                 |
        Available **std** values are: "c++98","c++03", "c++11", "c++14", "c++17"         

        ---

        **python**
        | Key              | Description                                                   |
        | ---------------- | --------------------------------------------------------------|
        | version          | Sets the python version, default is: 3                        |
        Available **version** values are: 2, 3                                           
      tags:
        - Utils
      security:
        - ApiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                language:
                  type: string
                  description: 'Available languages are `c`, `cpp`, `js` and `python`'
                code:
                  type: string
                  format: base64
                  description: Provide the code as base64 string to avoid character escapes.
                std:
                  type: string
                  description: For `C` and `C++` only.
                version:
                  type: integer
                  format: int32
                  description: For `Python` only.
              required:
                - language
                - code
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          source:
                            type: string
                            description: Defines the source of the response. Can be `compiler` or `runtime`
                          result:
                            type: string
                            description: Output of the given code.
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /urlshorteners:
    get:
      summary: Gets all url shorteners
      operationId: shortUrls
      description: |
        `Member` & `Subscriber` Endpoint. API-Key is needed.

        Shorten urls are bound to the user who owns the api-key. This is an endpoint to retrieve all these shorten urls.
      tags:
        - Utils
      security:
        - ApiKey: []
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          original_url:
                            type: string
                          short_url:
                            type: string
                          code:
                            type: string
                          clicks:
                            type: integer
                            format: int32
                          created_at:
                            type: string
                            format: date-time
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '401':
          description: Unauthorized Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  /urlshortener:
    post:
      summary: Shorts a given URL
      operationId: shortUrl
      description: |
        `Public`, `Member` & `Subscriber` Endpoint. API-Key not necessary.

        If `x-api-key` is supplied, then the short-urls are assigned to the user who owns the api-key. So you can query all short-urls and get more information, like the number of clicks. You can also remove them with the delete endpoint.

        Available shortener domains are: "xfive.de", "xtc5.de"

        If "custom_id" is passed with payload, random id will not be generated and your custom id will be used, if its available.

        Returns the short url.
      tags:
        - Utils
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                original_url:
                  type: string
                domain:
                  type: string
                custom_id:
                  type: string
              required:
                - original_url
                - domain
      responses:
        '200':
          description: Expected Response
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      status:
                        type: string
                        example: success
                      code:
                        type: integer
                        format: int32
                      message:
                        type: string
                  - type: object
                    properties:
                      data:
                        type: string
                        format: url
                        description: Returns the shorten url
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
  '/urlshortener/{id}':
    delete:
      summary: Deletes a given url shortener object.
      description: |
        `Member` & `Subscriber` Endpoint. API-Key is needed.
      tags:
        - Utils
      security:
        - ApiKey: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          description: UUID of the shorten url
          required: true
      responses:
        '204':
          description: Null Response
        '400':
          description: Bad Request Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '429':
          description: Too Many Requests Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
        '500':
          description: Unexpected Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    format: int32
                  message:
                    type: string
                  note:
                    type: string
components:
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: x-api-key
